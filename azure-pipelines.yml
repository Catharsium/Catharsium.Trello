trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetCommand@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '*.sln'
    
- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: '*.sln'
    testRunTitle: 'Test'

- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Trello.Console>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Trello.Console.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Trello.Plugins.CalendarSync>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Trello.Plugins.CalendarSync.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Trello.Plugins.Groceries>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Trello.Plugins.Groceries.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Trello.Plugins.WeeklyGoals>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Trello.Plugins.WeeklyGoals.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: pack
    versioningScheme: byEnvVar
    versionEnvVar: Build.BuildNumber

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet.org'
